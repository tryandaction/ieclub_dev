# .github/workflows/deploy.yml
# GitHub Actions自动部署配置

name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  # 部署到生产环境
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://api.ieclub.online

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 添加服务器到 known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: 部署到服务器
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh $SERVER_USER@$SERVER_HOST << 'ENDSSH'
            cd /var/www/ieclub

            # 拉取最新代码
            git pull origin main

            # 进入后端目录
            cd backend

            # 安装依赖
            npm install --production

            # 生成 Prisma Client
            npm run prisma:generate

            # 运行数据库迁移
            npm run prisma:migrate

            # 重启服务
            docker-compose pull
            docker-compose up -d --build

            # 检查服务状态
            docker-compose ps
          ENDSSH

      - name: 健康检查
        run: |
          sleep 30
          curl -f https://api.ieclub.online/api/v1/health || exit 1

      - name: 发送部署通知（成功）
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: '✅ IEclub 生产环境部署成功！',
              attachments: [{
                color: 'good',
                text: `部署者: ${{ github.actor }}\n提交: ${{ github.sha }}\n时间: ${{ github.event.head_commit.timestamp }}`
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: 发送部署通知（失败）
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: '❌ IEclub 生产环境部署失败！',
              attachments: [{
                color: 'danger',
                text: `部署者: ${{ github.actor }}\n提交: ${{ github.sha }}\n请检查部署日志`
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}