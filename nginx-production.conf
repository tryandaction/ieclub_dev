# ==========================================
# IEClub 生产环境 Nginx 配置
# 服务器: 39.108.160.112
# 域名: ieclub.online
# ==========================================

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name ieclub.online www.ieclub.online;
    
    # Let's Encrypt SSL 证书验证路径
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 其他所有请求重定向到 HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 主服务
server {
    listen 443 ssl http2;
    server_name ieclub.online www.ieclub.online;

    # ==================== SSL 证书配置 ====================
    # 请根据实际证书路径修改以下配置
    # 如果使用 Let's Encrypt (Certbot)，通常路径如下：
    ssl_certificate /etc/letsencrypt/live/ieclub.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ieclub.online/privkey.pem;
    
    # SSL 优化配置（可选，Certbot 会自动生成）
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # SSL 协议和加密套件
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # ==================== 安全头 ====================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ==================== 日志配置 ====================
    access_log /var/log/nginx/ieclub-access.log;
    error_log /var/log/nginx/ieclub-error.log;

    # ==================== 基础配置 ====================
    client_max_body_size 50M;  # 文件上传大小限制

    # ==================== API 后端代理 ====================
    location /api/ {
        # 代理到本地 Node.js 后端服务
        # 请确认后端服务运行在 127.0.0.1:3000
        proxy_pass http://127.0.0.1:3000;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲区配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # ==================== 文件上传特殊处理 ====================
    location /api/upload/ {
        proxy_pass http://127.0.0.1:3000;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 上传专用超时配置（更长的超时时间）
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 增加缓冲区大小
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # ==================== 前端 H5 应用 ====================
    location / {
        # 🔥 关键配置：指向 Taro H5 构建输出目录
        # 请根据实际部署路径修改此处
        root /root/IEclub_dev/ieclub-taro/dist;
        index index.html;
        
        # SPA 路由支持 - 所有路由都返回 index.html
        try_files $uri $uri/ /index.html;
        
        # ==================== 静态资源缓存策略 ====================
        
        # JS、CSS、字体等静态资源 - 长期缓存
        location ~* \.(js|css|woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # 图片资源 - 长期缓存
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # HTML 文件 - 不缓存，确保总是获取最新版本
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # index.html 特殊处理
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }

    # ==================== 健康检查端点 ====================
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ==================== Gzip 压缩 ====================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ==================== 错误页面 ====================
    error_page 404 /index.html;  # SPA 应用，404 也返回 index.html
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# ==========================================
# 部署说明
# ==========================================
# 1. 将此文件复制到服务器: /etc/nginx/sites-available/ieclub.online
# 2. 创建软链接: sudo ln -s /etc/nginx/sites-available/ieclub.online /etc/nginx/sites-enabled/
# 3. 修改以下配置项：
#    - SSL 证书路径（第 28-29 行）
#    - 前端文件路径（第 119 行）
#    - 后端服务地址（第 66 行，如果不是 127.0.0.1:3000）
# 4. 测试配置: sudo nginx -t
# 5. 重启 Nginx: sudo systemctl restart nginx
# ==========================================

