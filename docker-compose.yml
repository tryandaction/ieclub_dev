version: '3.8'

services:
  # 前端应用服务
  frontend:
    build: ./ieclub-taro
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://backend:3000
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ieclub-network

  # 后端API服务
  backend:
    build: ./ieclub-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=mysql://ieclub_user:${DB_PASSWORD:-kE7pCg$r@W9nZ!sV2}@db:3306/ieclub
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./ieclub-backend/logs:/app/logs
      - ./ieclub-backend/uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ieclub-network

  # MySQL 数据库
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root_password}
      - MYSQL_DATABASE=ieclub
      - MYSQL_USER=ieclub_user
      - MYSQL_PASSWORD=${DB_PASSWORD:-kE7pCg$r@W9nZ!sV2}
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./ieclub-backend/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ieclub-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - ieclub-network

  # Nginx 反向代理（可选，用于负载均衡）
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./ieclub-backend/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ieclub-backend/docker/nginx/conf.d:/etc/nginx/conf.d
      - ./ieclub-backend/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - ieclub-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ieclub-network:
    name: ieclub-network
    driver: bridge